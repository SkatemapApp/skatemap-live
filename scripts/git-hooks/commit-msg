#!/bin/bash

# Commit message hook to validate conventional commit format
# Based on https://www.conventionalcommits.org/en/v1.0.0/
#
# To install this hook:
#   cp scripts/git-hooks/commit-msg .git/hooks/commit-msg
#   chmod +x .git/hooks/commit-msg

set -e

commit_msg_file="$1"
commit_msg=$(cat "$commit_msg_file")

# Skip validation for merge commits
if [[ "$commit_msg" =~ ^Merge\ (branch|remote-tracking\ branch) ]]; then
    exit 0
fi

# Skip validation for revert commits
if [[ "$commit_msg" =~ ^Revert ]]; then
    exit 0
fi

# Valid conventional commit types
valid_types="^(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\(.+\))?: .+"

if [[ ! "$commit_msg" =~ $valid_types ]]; then
    echo "❌ Invalid commit message format!"
    echo ""
    echo "Commit message must follow Conventional Commits specification:"
    echo "https://www.conventionalcommits.org/en/v1.0.0/"
    echo ""
    echo "Format: <type>[optional scope]: <description>"
    echo ""
    echo "Valid types:"
    echo "  build:    Changes that affect the build system or external dependencies"
    echo "  chore:    Other changes that don't modify src or test files"
    echo "  ci:       Changes to CI configuration files and scripts"
    echo "  docs:     Documentation only changes"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  perf:     A code change that improves performance"
    echo "  refactor: A code change that neither fixes a bug nor adds a feature"
    echo "  style:    Changes that do not affect the meaning of the code"
    echo "  test:     Adding missing tests or correcting existing tests"
    echo ""
    echo "Examples:"
    echo "  feat: add user authentication"
    echo "  fix: resolve memory leak in data processor"
    echo "  docs: update API documentation"
    echo "  feat(auth): implement OAuth2 login"
    echo ""
    echo "Your commit message:"
    echo "  $commit_msg"
    echo ""
    exit 1
fi

echo "✅ Commit message format is valid"
exit 0